@import "./Variable";
$breakPoints: ( "xs": 0, "sm": 480px, "md": 720px, "lg": 960px, "xl": 1200px, "xxl": 1400px, "xxxl": 1600px, );
@mixin screen-xs {
  @media screen and (min-width: map-get($breakPoints, "xs")) {
    @content;
  }
}

@mixin screen-sm {
  @media screen and (min-width: map-get($breakPoints, "sm")) {
    @content;
  }
}

@mixin screen-md {
  @media screen and (min-width: map-get($breakPoints, "md")) {
    @content;
  }
}

@mixin screen-lg {
  @media screen and (min-width: map-get($breakPoints, "lg")) {
    @content;
  }
}

@mixin screen-xl {
  @media screen and (min-width: map-get($breakPoints, "xl")) {
    @content;
  }
}

@mixin screen-xxl {
  @media screen and (min-width: map-get($breakPoints, "xxl")) {
    @content;
  }
}

@mixin screen-xxxl {
  @media screen and (min-width: map-get($breakPoints, "xxxl")) {
    @content;
  }
}

@mixin breakPoints($value) {
  @media screen and (min-width: $value) {
    @content;
  }
}

@mixin flex($direction: row, $items: start, $jastify: start, $gap: 0) {
  display: flex;
  align-items: $items;
  justify-content: $jastify;
  flex-direction: $direction;
  gap: $gap;
}

@mixin grid($gap: 0) {
  display: grid;
  gap: $gap;
}

@mixin responseve-grid($column: 3, $row: 3, $min: 1rem) {
  display: grid;
  grid-template-columns: repeat(3, minmax($min, 1fr));
  grid-template-row: repeat(3, minmax($min, 1fr));
}

@mixin button {
  width: auto;
  height: auto;
  font-size: $fs-medium;
  font-weight: $fw-medium;
  background: $color-primary;
  color: $color-white-default;
  border-radius: $big-radius;
  transition: $transition;
  &:hover {
    opacity: $opacity-90;
  }
  &:active {
    opacity: $opacity-80;
  }
}

@mixin custom-button {
  --border-radius: 5rem;
  --border-width: 0.2rem;
  --transition: 0.2s ease-in-out;
  position: relative;
  @include flex(row, center, center, 0);
  width: auto;
  height: 45px;
  padding: 0 $size-1rem;
  font-size: $fs-small-xl;
  font-weight: $fw-bold;
  color: $color-white-default;
  border-radius: var(--border-radius);
  background: $primary-gradient;
  background-size: 150% 150%;
  background-position: left top;
  text-transform: uppercase;
  transition: var(--transition);
  z-index: 1;
  &::after {
    content: "";
    position: absolute;
    display: block;
    height: calc($full-height - calc(var(--border-width) * 2));
    width: calc($full-width - calc(var(--border-width) * 2));
    top: var(--border-width);
    left: var(--border-width);
    background: $bg-color-dark;
    border-radius: calc(var(--border-radius) - var(--border-width));
    transition: var(--transition);
    z-index: -1;
  }
  &:hover {
    background-position: right bottom;
    &::after {
      background: transparent;
    }
  }
}

@mixin fede-in($duration: 0.5s, $fill-mode: forwards) {
  animation: fede-in $duration linear $fill-mode;
}

@mixin fede-out($duration: 0.5s, $fill-mode: forwards) {
  animation: fede-out $duration linear $fill-mode;
}

@mixin scale-in($duration: 0.5s, $fill-mode: forwards) {
  animation: scale-in $duration linear $fill-mode;
}

@mixin scale-out($duration: 0.5s, $fill-mode: forwards) {
  animation: scale-out $duration linear $fill-mode;
}

@mixin animation( $name: fede-in, $timing-function: linear, $duration: 0.5s, $fill-mode: forwards) {
  animation: $name $duration $timing-function $fill-mode;
}

@keyframes fede-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@-o-keyframes fede-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@-moz-keyframes fede-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@-ms-keyframes fede-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@-webkit-keyframes fede-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes fede-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@-o-keyframes fede-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@-ms-keyframes fede-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@-moz-keyframes fede-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@-webkit-keyframes fede-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes scale-in {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@-o-keyframes scale-in {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@-ms-keyframes scale-in {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@-moz-keyframes scale-in {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@-webkit-keyframes scale-in {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes scale-out {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}

@-o-keyframes scale-out {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}

@-ms-keyframes scale-out {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}

@-moz-keyframes scale-out {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}

@-webkit-keyframes scale-out {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}